lab4 
Tastambekova Aisha 
Task 1.1 
user_input = input("Enter a string without whitespaces: ")
user_input = user_input.replace(" ", "")
user_tuple = tuple(user_input)
print("Tuple:", user_tuple)

Task 1.2 
user_tuple = ('H', 'e', 'l', 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd')
tuple_as_string = ''.join(user_tuple)
print("Tuple as String:", tuple_as_string)

Task 1.3
tuple_a = (1, 2, 3, 4, 5)
tuple_b = ('A', 'B', 'C', 'D', 'E')
midpoint = len(tuple_a) // 2
concatenated_tuple = tuple_a[:midpoint] + tuple_b[midpoint:]
print("Concatenated Tuple:", concatenated_tuple)

Task 1.4
input_tuple = ('A', 2, 'B', 3, 'A', [1, 2], 2, 'B', 'C', [1, 2])
element_count = {}
for element in input_tuple:
    if element in element_count:
        element_count[element] += 1
    else:
        element_count[element] = 1
occurrence_tuples = tuple((element, count) for element, count in element_count.items())
print("Element Occurrences:", occurrence_tuples)

Task 1.5 
person = ("John", 30, "New York")
point = (3.5, -2.1)
date = (2023, 10, 15)
shopping_list = ("Apples", "Bananas", "Milk", "Bread")
print("Person:", person)
print("Point:", point)
print("Date:", date)
print("Shopping List:", shopping_list)

Task 2.1
user_input = input("Enter a string (without whitespaces): ")
char_set = {char for char in user_input}
print("Set from User Input:", char_set)

Task 2.2 
set1 = {1, 2, 3, 4, 5}
set2 = {3, 4, 5, 6, 7}
difference_set = set1 - set2
print("Difference between set1 and set2:", difference_set)

Task 2.3
set_a = {1, 2, 3, 4, 5}
set_b = {3, 4, 5, 6, 7}
set_a -= set_b
print("Set A after removing elements from set B:", set_a)

Task 2.4
set_a = {1, 2, 3, 4, 5}
set_b = {6, 7, 8, 9, 10}
set_c = {3, 4, 5, 11, 12}
for element in set_a.copy():
    if element in set_c:
        set_b.add(element)  
        set_a.remove(element)  
print("Set A after removing elements:", set_a)
print("Set B after adding elements:", set_b)

Task 2.5
from itertools import combinations
superset_a = [1, 2, 3, 4, 5, 6]
m = 3  
n = 2  
list_of_sets = [set(combination) for combination in combinations(superset_a, n)][:m]
for i, s in enumerate(list_of_sets, start=1):
    print(f"Set {i}: {s}")

Task 3.1
from itertools import groupby
data = [
    ("Toyota", "Camry"),
    ("Toyota", "Corolla"),
    ("Honda", "Civic"),
    ("Honda", "Accord"),
    ("Ford", "Fusion"),
]
sorted_data = sorted(data, key=lambda x: x[0])
grouped_data = groupby(sorted_data, key=lambda x: x[0])
for manufacturer, group in grouped_data:
    models = [model for _, model in group]
    count = len(models)
    print(f"MANUFACTURER: {manufacturer}")
    print(f"Count of Models: {count}")
    print("Car Models:")
    for model in models:
        print(f" - {model}")
    print()

